package in.co.rays.ORSProj3.model;

import java.util.HashMap;
import java.util.ResourceBundle;

/**
 * Factory of Model classes
 *
 * @author Dilip Singh
 * @version 1.0
 * @Copyright (c) SUNRAYS Technologies
 *
 */
public class ModelFactory {
	
	private static ResourceBundle bundle = ResourceBundle.getBundle("in.co.rays.ORSProj3.bundle.System");
	
	private static final String DATABASE = bundle.getString("DATABASE");
	private static ModelFactory mFactory = null;

    /**
     * Cache of Model classes
     */
	private static HashMap modelCache = new HashMap();
	
    /**
     * Constructor is private so no other class can create instance of Model
     * Locator
     */
	private ModelFactory()
	{
		
	}
	
    /**
     * Get the instance of Model Locator
     *
     * @return mFactory
     */
	public static ModelFactory getInstance()
	{
		if (mFactory == null)
		{
			mFactory = new ModelFactory();
		}
		
		return mFactory;
	}
	
    /**
     * Get instance of Marksheet Model
     *
     * @return marksheetModel
     */
	public MarksheetModelInt getMarksheetModel()
	{
		MarksheetModelInt marksheetModel = (MarksheetModelInt) modelCache.get("marksheetModel");
		
		if (marksheetModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				marksheetModel = new MarksheetModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				marksheetModel = new MarksheetModelJDBCImpl();
				
			}
			
			modelCache.put("marksheetModel", marksheetModel);
		}
		
		return marksheetModel;
	}
	
    /**
     * Get instance of College Model
     *
     * @return collegemodel
     */
	public CollegeModelInt getCollegeModel()
	{
		CollegeModelInt collegeModel = (CollegeModelInt) modelCache.get("collegeModel");
		
		if (collegeModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				collegeModel = new CollegeModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				collegeModel = new CollegeModelJDBCImpl();
				
			}
			
			modelCache.put("collegeModel", collegeModel);
		}
		
		return collegeModel;
	}
	
    /**
     * Get instance of Marksheet Model
     *
     * @return marksheetModel
     */
	public StudentModelInt getStudentModel()
	{
		StudentModelInt studentModel = (StudentModelInt) modelCache.get("studentModel");
		
		if (studentModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				studentModel = new StudentModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				studentModel = new StudentModelJDBCImpl();
				
			}
			
			modelCache.put("studentModel", studentModel);
		}
		
		return studentModel;
	}
	
	public CourseModelInt getCourseModel()
	{
		CourseModelInt courseModel = (CourseModelInt) modelCache.get("courseModel");
		
		if (courseModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				courseModel = new CourseModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				courseModel = new CourseModelJDBCImpl();
				
			}
			
			modelCache.put("courseModel", courseModel);
		}
		
		return courseModel;
	}
	
	public SubjectModelInt getSubjectModel()
	{
		SubjectModelInt subjectModel = (SubjectModelInt) modelCache.get("subjectModel");
		
		if (subjectModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				subjectModel = new SubjectModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				subjectModel = new SubjectModelJDBCImpl();
				
			}
			
			modelCache.put("subjectModel", subjectModel);
		}
		
		return subjectModel;
	}
	
	public RoleModelInt getRoleModel()
	{
		RoleModelInt roleModel = (RoleModelInt) modelCache.get("roleModel");
		
		if (roleModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				roleModel = new RoleModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				roleModel = new RoleModelJDBCImpl();
				
			}
			
			modelCache.put("roleModel", roleModel);
		}
		
		return roleModel;
	}
	
	public UserModelInt getUserModel()
	{
		UserModelInt userModel = (UserModelInt) modelCache.get("userModel");
		
		if (userModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				userModel = new UserModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				userModel = new UserModelJDBCImpl();
				
			}
			
			modelCache.put("userModel", userModel);
		}
		
		return userModel;
	}
	
	public FacultyModelInt getFacultyModel()
	{
		FacultyModelInt facultyModel = (FacultyModelInt) modelCache.get("facultyModel");
		
		if (facultyModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				facultyModel = new FacultyModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				facultyModel = new FacultyModelJDBCImpl();
				
			}
			
			modelCache.put("facultyModel", facultyModel);
		}
		
		return facultyModel;
	}
	
	public TimeTableModelInt getTimeTableModel()
	{
		TimeTableModelInt timeTableModel = (TimeTableModelInt) modelCache.get("timeTableModel");
		
		if (timeTableModel == null)
		{
			if ("Hibernate".equals(DATABASE))
			{
				timeTableModel = new TimeTableModelHibImpl();
			}
			
			if ("JDBC".equals(DATABASE))
			{
				timeTableModel = new TimeTableModelJDBCImpl();
				
			}
			
			modelCache.put("timeTableModel", timeTableModel);
		}
		
		return timeTableModel;
	}

}
